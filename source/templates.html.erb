---
title: Templates to build microservices
---

<div class="pure-g">

    <div class="pure-u-1">

        <h2>Microservices Templates</h2>

        <p>Here's the list of the current microservices templates. Each one links to a Github repo,
           that you can clone and modify to create a new microservice.</p>
    </div>

    <% data.templates.templates.each do |f| %>
    <div class="pure-u-1 pure-u-md-1-2 pure-u-lg-1-4">
        <h1>
            <a href="/microservices/<%= f.name %>"><%= f.name %></a>
        </h1>
        <p class="ms-description"><%= f.description %></p>
    </div>
    <% end %>

    <div class="pure-u-1">

        <p>To make sure your new microservice follows the standard, here is a suggested workflow :</p>

        <ul class="list">

            <li>Change the NAME file with the name of your new microservice.</li>

            <li>Change the README.md file to describe your microservice.</li>

            <li>Change the LICENSE file for your favorite
                <a href="https://opensource.org/licenses">open-source license</a>.</li>

            <li>Write some code exposing functionality over a RESTful API. This is the hard part.
               You can find in the FAQ section a list of best practices and various resources.
            </li>

            <li>Update the swagger.json file to describe your API. The
                <a href="http://editor.swagger.io/#/">Swagger Editor</a>
                may help.</li>

            <li>Update the run.sh script to run your microservice.</li>

            <li>Execute the build.sh script to build a Docker image.</li>

            <li>Share your work ! Publish the code on Github and the image to the Docker Hub.</li>

            <li>As you change your microservice over time, update the VERSION file with a new version number, follow
                <a href="http://semver.org/">the semantic versioning specification</a>.</li>

        </ul>

    </div>

    <div class="pure-u-1">
        <h2>Container Images</h2>
        <p>All the microservices are built by reusing a group of Docker images, one for each programming language.
           They follow a simple msa-image-&lt;language&gt; naming convention.</p>

        <p>Images share a few components, Alpine Linux as the container operating system,
           Nginx as an embedded web server and caching layer, Swagger for the API documentation.</p>
    </div>

    <div class="pure-u-1">
        <p>Example of a reusable container image and some of it's layers :</p>
        <img class="pure-img" src="images/msa-image.png" alt="This is a "></img>
    </div>

    <div class="pure-u-1">
        <p>An example microservice built with the previous image :</p>
        <img class="pure-img" src="images/msa-template.png"></img>
    </div>

    <div class="pure-u-1">
        <p>Here is the list of the Github repositories of the current images, if you want to take a look :</p>
    </div>

    <% data.images.images.each do |f| %>
    <div class="pure-u-1 pure-u-md-1-2 pure-u-lg-1-4">
        <h1>
            <a href="/microservices/<%= f.name %>"><%= f.name %></a>
        </h1>
        <p class="ms-description"><%= f.description %></p>
    </div>
    <% end %>

</div>
